{"version":3,"sources":["icons/IRA_logo.svg","components/Steps.jsx","components/RoundStep.jsx","components/header.jsx","components/CheckStep.jsx","components/Inputs.jsx","components/BaneficiariesList.jsx","components/CheckContent.jsx","components/StepsContent.jsx","App.js","reportWebVitals.js","index.js"],"names":["Steps","props","stepList","stepsStyles","Step","step","style","stepsContainer","ul","map","item","i","RoundStep","stepLabel","stepIcon","lastStep","firstStep","pre","post","point","status","className","Header","styles","logo","display","fontSize","alignItems","gap","sub","src","alt","height","width","listStyle","li","CheckStep","background","color","class","input","border","borderRadius","padding","backgroundColor","select","boxSizing","label","formGroup","flexDirection","justifyContent","percentage","Input","register","name","required","rest","Select","options","value","PercentageInput","control","rules","render","field","size","decimalScale","onValueChange","values","console","log","target","floatValue","suffix","onChange","formItem","marginBottom","remove","submit","check","formStyles","next","primaryTotal","float","messageGreen","messageRed","BeneficiariesList","nextCheck","useForm","defaultValues","formItems","fullName","birth","ssn","optional","relationship","part","mode","errors","setValue","formState","handleSubmit","watch","useFormState","isValid","dirtyFields","useFieldArray","fields","append","useState","setPrimaryTotal","addItem","setAddItem","onCheck","TotalPercentage","useWatch","reduce","acc","cur","element","parseInt","isNaN","onSubmit","data","index","message","maxLength","defaultValue","placeholder","type","max","min","onClick","id","disabled","CheckContent","complited","onCompleted","currentCheck","checkList","StepsContent","forEach","setcurrentCheck","currentStep","lineHeight","paddingInline","borderRight","findIndex","length","prevState","App","setcurrentStep","nextStep","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dad4e2a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/IRA_logo.b14a3041.svg\";","import React from 'react';\n\nexport default function Steps(props) {\n    const stepList = props.stepList;\n    const stepsStyles = props.stepsStyles;\n    const Step = props.step;\n\n    return (\n        <div style={stepsStyles.stepsContainer}>\n            <ul  style={stepsStyles.ul} >\n                {stepList.map((item,i) => <Step key={i} {...item} />)}\n            </ul>\n        </div>\n    )\n}\n","\nimport React from 'react';\nimport './RoundStep.css';\n\n\nexport default function RoundStep(props) {\n    const stepLabel = props.stepLabel;\n    const stepIcon = props.stepIcon;\n    const lastStep = props.lastStep;\n    const firstStep = props.firstStep;\n    const status = props.status;\n    let pre = \"pre\";\n    let post = \"post\";\n    let point = \"point\";\n    switch(status) {\n        case \"current\":\n            pre += \" done\";\n            post += \" inactive\";\n            point += \" current\";\n            break;\n        case \"done\":\n            pre += \" done\";\n            post += \" done\";\n            point += \" done\";\n            break;\n        default:\n            pre += \" inactive\";\n            post += \" inactive\";\n            point += \" inactive\";\n            break;\n    }\n    (firstStep)&&(pre += ' hide');\n    (lastStep)&&(post += ' hide');\n    return (\n        <li>\n        <div className=\"stepContainer\">\n            <div className=\"pointContainer\">\n                <div className={pre}></div>\n                <div className={point}>\n                <i className={stepIcon}></i>\n                </div>\n                <div className={post} ></div>\n            </div>\n            <div className=\"stepLabel\">{stepLabel}</div>\n        </div>\n        </li>\n    )\n}\n","import React from 'react';\nimport logo from '../icons/IRA_logo.svg';\nimport Steps from './Steps';\nimport RoundStep from './RoundStep';\n\n\nexport default function Header(props) {\n    const stepList = props.stepList;\n    const styles = {\n        logo: {\n            display: \"flex\",\n            fontSize: '1.66em',\n            alignItems: 'center',\n            // justifyContent: 'center',\n            gap: '0.3em',\n        },\n        sub: {\n            fontSize: '0.83em',\n        }\n    };\n    const stepsStyles = {\n        ul: {\n            display: 'flex',\n            listStyle: 'none'\n        }\n    }\n\n    return (\n        <div className=\"header\">\n            <div style={styles.sub}>\n                <label style={styles.logo}>\n                    <img src={logo} alt=\"check\" height=\"36\" width=\"36\"/>\n                    <strong> IRA Application</strong>\n                </label>\n                    IRA Accounts provided by Fidelity Investments\n            </div>\n            <Steps stepList={stepList} stepsStyles={stepsStyles} step={RoundStep}></Steps>\n        </div>\n    )\n}\n","import React from 'react';\n\nconst styles = {\n    li: {\n        display: 'flex',\n        gap: '0.3em',\n        fontSize: \"18px\",\n    },\n    stepLabel: {},\n}\n\nexport default function CheckStep({stepLabel, status}) {\n    // const stepLabel = props.stepLabel;\n    // const status = props.status;\n\n    return (\n        <div >\n            <li style={{...styles.li,...(status === \"current\") && {background: '#f3f3f3'}}}>\n                &nbsp;&nbsp;\n               {(status === \"done\") && (<i style={{color: '#18c23d'}} class=\"uil uil-check\"/>)}\n               {(status === \"current\") && (<i style={{color: '#2f80ed'}} class=\"uil uil-compact-disc\"/>)}\n               {(status === \"inactive\") && (<i style={{color: '#c9c4c4'}} class=\"uil uil-circle\"/>)}\n                <div style={styles.stepLabel}>{stepLabel}</div>\n            </li>\n        </div>\n    )\n}\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\nimport { Controller } from \"react-hook-form\";\n\nconst styles = {\n    input: {\n      border: 'none',\n      borderRadius: \"4px\",\n      display: \"block\",\n      height: \"30px\",\n      fontSize: \"16px\",\n      padding: \"2px 10px\",\n      backgroundColor: \"#f5f5f5\",\n    },\n    select: {\n      boxSizing: 'content-box'\n    },\n    label: {},\n    formGroup: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-end\",\n      gap: \"4px\"\n    },\n    percentage: {\n      width: \"60px\",\n    },\n  };\n\nexport const Input = ({ label, register, name, required, ...rest }) => (\n    <div style={styles.formGroup}>\n        <label style={styles.label}>{label}</label>\n        <input style={styles.input} {...register(name, required)} {...rest} />\n    </div>\n);\n\n\nexport const Select = ({ label, register, options, name, required, ...rest }) => (\n    <div style={styles.formGroup}>\n        <label style={styles.label}>{label}</label>\n        <select style={{ ...styles.input, ...styles.select }}\n            {...register(name, required)} {...rest}>\n            {options.map(value => (\n                <option key={value} value={value}>\n                    {value}\n                </option>\n            ))}\n        </select>\n    </div>\n);\n\nexport const PercentageInput = ({ control, label, name, required, ...rest }) => (\n    <Controller\n        control={control}\n        label={label}\n        name={name}\n        // defaultValue={defaultValue}\n        rules={required}\n        {...rest}\n        render={({ field }) => {\n            // sending integer instead of string.\n            return (\n                <div style={styles.formGroup}>\n                    <label style={styles.label}>{label}</label>\n                    <NumberFormat\n                        style={{ ...styles.input, ...styles.percentage }}\n                        size=\"small\"\n                        label=\"percent\"\n                        // variant=\"outlined\"\n                        decimalScale={1}\n                        // allowEmptyFormatting={false}\n                        onValueChange={values => {\n                            // setValue(field, parseInt(values.floatValue));\n                            console.log({\n                             target: {\n                              value: values.floatValue,\n                             },\n                            });\n                           }}\n                        control={control}\n                        suffix={\"%\"}\n                        // fixedDecimalScale={true}\n                        onChange={() => console.log(field.value)}\n                        {...field}\n                    />\n                </div>\n            );\n        }}\n    />\n);","import React, { useState } from 'react';\nimport { Input, Select, PercentageInput } from \"./Inputs\"\nimport { useForm, useFieldArray, useWatch, Controller, useFormState } from \"react-hook-form\";\nimport './BeneficiaryList.css';\n\nconst styles = {\n  formItem: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    width: \"100%\",\n    gap: \"1em\",\n    marginBottom: \"1.5em\",\n  },\n  label: {},\n  remove: {\n    background: '#fff',\n    color: '#f35361',\n    border: 'none',\n    height: \"30px\",\n    fontSize: \"24px\",\n  },\n  submit: {\n    background: '#fff',\n    color: '#18c23d',\n    border: 'none',\n    height: \"30px\",\n    fontSize: \"24px\",\n  },\n  check: {},\n};\n\nconst formStyles = {\n  padding: '2em',\n  formGroup: {\n    display: \"flex\",\n    alignItems: 'flex-end',\n    gap: \"14px\"\n  },\n  next: {},\n  primaryTotal: {\n    color: '#df960e',\n    backgroundColor: '#fcf7e8',\n    width: \"18%\",\n    float: 'right',\n  },\n  messageGreen: {\n    color: '#18c23d',\n    backgroundColor: '#e5f8e9',\n  },\n  messageRed: {\n    color: '#f35361',\n    backgroundColor: '#fcecef',\n  },\n};\n\n\nexport default function BeneficiariesList({nextCheck}) {\n  const { register, setValue, formState: { errors }, control, handleSubmit, watch } = useForm({\n    defaultValues: {\n      formItems: [\n        { fullName: \"Tom Cruise\", birth: \"1980-01-01\", ssn: \"SSN\", optional: \"\", relationship: \"Trust\", part: \"40.0%\", check: false, },\n        { fullName: \"Elon Musk\", birth: \"1970-01-01\", ssn: \"SSN\", optional: \"\", relationship: \"Trust\", part: \"20.0%\", check: false, },\n        { fullName: \"Jeff Bezos\", birth: \"1965-01-01\", ssn: \"SSN\", optional: \"\", relationship: \"Trust\", part: \"30.0%\", check: true, },\n      ]\n    },\n    mode: \"onChange\"\n  });\n  const { dirtyFields, isValid } = useFormState({\n    control\n  });\n  const { fields, remove, append } = useFieldArray({\n    name: \"formItems\",\n    control\n  });\n  const [primaryTotal, setPrimaryTotal] = useState(0);\n  const [addItem, setAddItem] = useState(false);\n  const onCheck = () => {\n    // setValue(`formItems[${index}].check`, false);\n    setAddItem(true);\n  }\n  const onSubmit = data => {\n    console.log(data);\n    // nextCheck();\n  }\n  const newItem = () => {\n    append({ part: 0 });\n    setAddItem(false);\n    //    append({part: 0});\n  };\n  const Check = ({ control, index, field }) => {\n    const value = useWatch({\n      control,\n      name: \"formItems\",\n    });\n    return (\n      <Controller\n        control={control}\n        name={`formItems.${index}.check`}\n        render={({ field }) =>\n          value?.[index]?.check === \"true\" ?\n            <button style={styles.submit} onClick={setValue(`formItems[${index}].check`, false)}>\n              <i class=\"uil uil-check\"></i>\n            </button> : null\n        }\n        defaultValue={field.check}\n      />\n    );\n  }\n  const TotalPercentage = ({ control }) => {\n    const value = useWatch({\n      control,\n      name: \"formItems\",\n    });\n    setPrimaryTotal(value.reduce((acc, cur) =>{ \n      const element = parseInt(cur.part);\n      return( isNaN(element) ? 0 : element + acc )}, 0));\n\n    return (<div style={{\n      ...formStyles.primaryTotal,\n      ...(100 < primaryTotal) && formStyles.messageRed,\n      ...(100 === primaryTotal) && formStyles.messageGreen\n    }}>\n\n      <div>Primary Total:  {primaryTotal}%</div></div>);\n  };\n  return (\n    <form style={formStyles} onSubmit={handleSubmit(onSubmit)}>\n      <h3>BENEFICIARIES</h3>\n      <br />\n      <h3>Primary Beneficiaries</h3>\n      <br />\n      <div>\n        {fields.map((field, index) => {\n          return (<div>\n            <div key={field.id} style={styles.formItem}>\n            <Input label=\"Full Name\" register={register} name={`formItems[${index}].fullName`}\n                    required={{ required: { value: true, message: \"Full Name is required.\" }, \n                                maxLength: { value: 30, message: \"Full Name can be max 30 characters long.\" } }} \n                    defaultValue={field.fullName}  \n                    placeholder=\"John Doe\" />\n            <Input label=\"Date of Birth\" register={register} name={`formItems[${index}].birth`}\n                    required={{ required: { value: true, message: \"Enter Date of Birthday.\" } }} \n                    defaultValue={field.birth}  \n                    type='date' />                    \n            <Select register={register} name={`formItems[${index}].ssn`}\n                    required={{ required: { value: true, message: \"SSN is required.\" } }} \n                    defaultValue={field.ssn}\n                    options={[\"SSN\", \"INN\"]} />\n            <Input register={register} name={`formItems[${index}].optional`}\n                    required={{ maxLength: { value: 40, message: \"optional can be max 40 characters long.\" } }} \n                    defaultValue={field.optional}  \n                    placeholder=\"optional\" size='5' />\n            <Select register={register} name={`formItems[${index}].relationship`}\n                    required={{ required: { value: true, message: \"Select Relationship.\" } }} \n                    defaultValue={field.relationship}\n                    label=\"Relationship\" options={[\"Trust\", \"noTrust\"]} />              \n            <PercentageInput  control={control} \n                    name={`formItems[${index}].part`}\n                    required={{ required: { value: true, message: \"Enter Percentage.\" },\n                    max: { value: 100, message: \"Percentage can be max 100 percent.\" },\n                    min: { value: 0, message: \"Percentage out of range.\" } }} \n                    defaultValue={field.part}\n                    label=\"Percentage\" />   \n              <button type=\"button\" style={styles.remove} onClick={() => remove(index)}>\n                <i class=\"uil uil-times\"></i>\n              </button>\n               {field.check &&\n              <button type=\"button\" style={styles.submit} onClick={onCheck}>\n                 <i class=\"uil uil-check\"></i>\n               </button>}\n            </div>\n            <div style={formStyles.messageRed} >\n              {errors?.formItems?.[index]?.fullName?.message}\n              {errors?.formItems?.[index]?.birth?.message}\n              {errors?.formItems?.[index]?.ssn?.message}\n              {errors?.formItems?.[index]?.part?.message}\n            </div>\n          </div>\n          );\n        })}\n      </div>\n      { addItem && (primaryTotal - 100) ? newItem() : null}\n      <br />\n      <div style = {{width: \"88%\"}}><TotalPercentage control={control} /></div>\n      <br />\n      {/* {console.log(!errors)} */}\n      <label style={formStyles.formGroup}>\n        <strong>Confingent Beneficiaies</strong>\n        <label className=\"switch\">\n          <input type=\"checkbox\"  {...register('confident')} />\n          <span className=\"slider round\"></span>\n        </label>\n      </label>\n      <br />\n      <PercentageInput  control={control} \n                    name={`test`}\n                    required={{ required: { value: true, message: \"Enter Percentage.\" },\n                    max: { value: 100, message: \"Percentage can be max 100 percent.\" },\n                    min: { value: 0, message: \"Percentage out of range.\" } }} \n                    defaultValue={10}\n                    label=\"test Percentage\" />   \n      <br />\n      <input className=\"button\" type=\"submit\" disabled={ !(isValid && !(primaryTotal - 100)) } /> \n      <br />\n      <br />\n      <button className=\"button\" onClick={() => nextCheck()}>Next</button>\n    </form>\n  );\n}\n","import React, { useState } from 'react'\nimport BeneficiariesList from './BaneficiariesList'\n\nexport default function CheckContent(props) {\n    const [beneficiaries, setBeneficiaries] = useState([\n        { id: 0, fullName: \"Tom Cruise\", birth: \"1980-01-01\", ssn: \"SSN\", optional: \"\", relationship: \"Trust\", part: 40, complited: true },\n        { id: 1, fullName: \"Elon Musk\", birth: \"1970-01-01\", ssn: \"SSN\", optional: \"\", relationship: \"Trust\", part: 20, complited: true },\n        { id: 2, fullName: \"Jeff Bezos\", birth: \"1965-01-01\", ssn: \"SSN\", optional: \"\", relationship: \"Trust\", part: 30, complited: true }\n    ]);\n    const { nextCheck, onCompleted } = props;\n    // const removeBeneficiary = id =>\n    //     setBeneficiaries(beneficiaries.filter(beneficiary => beneficiary.id !== id));\n    // const addBeneficiary = beneficiary => { console.log(\"id:\" + beneficiary.id) };\n\n    switch (props.currentCheck) {\n        case 0:\n            return (\n                <div>\n                    <h2>Check 1</h2>\n                    <button className=\"button\" onClick={() => nextCheck()}>Next</button>\n                </div>\n            )\n        case 1:\n            return (\n                <div >\n                    <h2>Check 2</h2>\n                    <button className=\"button\" onClick={() => nextCheck()}>Next</button>\n                </div>\n            )\n        case 2:\n            return (<div>\n                <h2>Check 3</h2>\n                <button className=\"button\" onClick={() => nextCheck()}>Next</button>\n            </div>)\n\n        case 3:\n            return (<div>\n                <BeneficiariesList nextCheck={nextCheck} />\n                {/* <h2>Step 4</h2>\n                <button className=\"button\" onClick={()=>nextCheck()}>Next</button> */}\n            </div>)\n        case 4:\n            return (<div>\n                <h2>Check 5</h2>\n                <button className=\"button\" onClick={() => nextCheck()}>Next</button>\n            </div>)\n        case 5:\n            return (<div>\n                <h2>Check 6</h2>\n                <button className=\"button\" onClick={() => onCompleted()}>Next</button>\n            </div>)\n    }\n}\n","import React, {useState} from 'react';\nimport Steps from './Steps';\nimport CheckStep from './CheckStep';\nimport CheckContent from './CheckContent';\n\nconst checkList = [\n    {\n      stepLabel: \"Personal Information\",\n    },\n    {\n      stepLabel: \"Contact Information\",\n    },\n    {\n        stepLabel: \"Relationship\",\n    },\n    {\n        stepLabel: \"Beneficiaries\",\n    },\n    {\n        stepLabel: \"Account Characteristics\",\n    },\n    \n    {\n        stepLabel: \"Review\",\n    }\n  ];\n  \n\nexport default function StepsContent(props) {\n\n    const [currentCheck, setcurrentCheck] = useState(() => {\n        checkList.forEach(item => item.status = \"inactive\");\n        checkList[0].status = \"current\";\n        return 0;\n      });\n        const checkStyles = {\n            ul: {\n                listStyle: 'none',\n                fontSize: '1.5rem',\n                lineHeight: '2.5',\n                paddingInline: '0px',\n            },\n            stepsContainer: {\n                // float: 'left',\n                width: '270px',\n                borderRight: '0.1rem #e0e0e0 solid'\n            }\n        };\n        const nextCheck = () => {\n            let index = checkList.findIndex(item => item.status === \"current\");\n            if(index+1) {\n              checkList[index].status = \"done\";      \n               if( index < checkList.length - 1 ) {\n              ++index;\n              checkList[index].status = \"current\";\n              setcurrentCheck(prevState => prevState + 1);\n              }\n            } \n          };\n\n    switch (props.currentStep) {\n        case 0:\n            return (\n                <div className=\"content\">\n                <Steps stepList={checkList} stepsStyles={checkStyles} step={CheckStep}/> \n                <CheckContent currentCheck={currentCheck} \n                              nextCheck={nextCheck} \n                              onCompleted={props.onCompleted}/>                    \n                </div>                \n            )\n        case 1:\n            return (\n                 <div className=\"content\">\n                <h2>Step 2</h2>    \n                 </div>                \n            )\n        case 2:\n            return (<div className=\"content\">\n                <h2>Step 3</h2>\n                </div>\n            )\n    }\n }\n","import './App.css';\nimport { useState } from \"react\";\nimport Header from \"./components/header\";\nimport StepsContent from \"./components/StepsContent\";\n\nconst stepList = [\n  {\n    stepLabel: \"IRA Application\",\n    stepIcon: \"uil uil-file-copy-alt\",\n  },\n  {\n    stepLabel: \"Risk Assessment\",\n    stepIcon: \"uil uil-abacus\",\n  },\n  {\n    stepLabel: \"Upload ID\",\n    stepIcon: \"uil uil-scenery\",\n  }\n];\n\nfunction App() {\n  const [currentStep, setcurrentStep] = useState(() => {\n    stepList[0].firstStep = true;\n    stepList[stepList.length - 1].lastStep = true;\n    stepList.forEach(item => item.status = \"inactive\");\n    stepList[0].status = \"current\";\n    return 0;\n  });\n  \n  const nextStep = () => {\n    let index = stepList.findIndex(item => item.status === \"current\");\n    console.log(\"index:\"+index);\n    if(index+1) {\n      stepList[index].status = \"done\";      \n       if( index < stepList.length - 1 ) {\n      ++index;\n      stepList[index].status = \"current\";\n      setcurrentStep(prevState => prevState + 1);\n      console.log(\"step: \"+currentStep);\n    }\n    } \n  };\n\n  return (\n    <div className=\"grid-container\">\n      <Header stepList={stepList}></Header>\n      <div>\n          <StepsContent currentStep={currentStep} onCompleted={nextStep} />        \n          <button className=\"button\" onClick={()=>nextStep()}>NexStep</button>\n      </div>  \n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}